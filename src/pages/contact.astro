---
import BaseLayout from "../layouts/BaseLayout.astro";
import client from "../data/client.json";
import Landing from "../components/Landing.astro";

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Landing (for rendering)
import {getOptimizedImage} from "../js/utils"
import landingImage from "../assets/images/landing.jpg" // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
const optimizedImage = await getOptimizedImage(landingImage)
---

<BaseLayout
  title="Contact"
  description="Meta description for the page"
  preloadedImage = {optimizedImage}
>
  <!-- ============================================ -->
  <!--                    LANDING                   -->
  <!-- ============================================ -->

  <!-- <Landing 
    title="Projects"
    image={optimizedImage}
  /> -->

   <!-- ============================================ -->
<!--                    Hero                      -->
<!-- ============================================ -->



    <!-- ============================================ -->
<!--                 Contact Form                 -->
<!-- ============================================ -->
<section id="cs-contact-549">
    <div class="cs-container">
        <div class="cs-content">
            <span class="cs-topper">Contact Us</span>
            <h2 class="cs-title">Ready To Get Your Website Started?</h2>
            <p class="cs-text">
                Reach out to us, and weâ€™ll guide you every step of the way to a website built for success. 
            </p>
        </div>
        
        <!-- Form -->
        <form class="cs-form" id="cs-form-549" name="Contact Form" method="post" netlify>
            <!-- Hidden form-name field for Netlify -->
            <input type="hidden" name="form-name" value="Contact Form" />
            
            <label class="cs-label">
                 Name
                <input class="cs-input" required type="text" id="name-549" name="name" placeholder="First & Second Name">
                <img class="cs-icon" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Contact-Page/person-gold.svg" alt="person icon" width="32" height="32">
            </label>
            
            <label class="cs-label cs-email">
                Email
                <input class="cs-input" required type="email" id="email-549" name="email" placeholder="Email">
                <img class="cs-icon" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Contact-Page/mail-gold.svg" alt="mail icon" width="32" height="32">
            </label>
            
            <label class="cs-label cs-phone">
                Phone
                <input class="cs-input" required type="text" id="phone-549" name="phone" placeholder="Phone">
                <img class="cs-icon" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Contact-Page/phone-golden.svg" alt="phone icon" width="32" height="32">
            </label>
            
            <!-- Business Name field - fixed ID and name -->
            <label class="cs-label cs-phone">
                Business Name
                <input class="cs-input" required type="text" id="business-name-549" name="business-name" placeholder="Business Name">
                <img class="cs-icon" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Contact-Page/refer.svg" alt="talking icon" width="32" height="32">
            </label>
            
            <label class="cs-label cs-textarea-label">
                Message
                <textarea class="cs-textarea" required name="Message" id="message-549" placeholder="Tell us which package or anything else you'd like below"></textarea>
            </label>
            
            <button class="cs-submit" type="submit">Send</button>
        </form>
    </div>
</section>

                 

<style>
  /*-- -------------------------- -->
<---       Contact Form         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    @keyframes scaleFade {
        0% {
            transform: translate(-50%, -50%) scale(0);
        }
        50% {
            opacity: 1;
            transform: translate(-50%, -50%) scale(1.4);
        }
        100% {
            transform: translate(-50%, -50%) scale(1.7);
            opacity: 0;
        }
    }
    #cs-contact-549 {
        padding: var(--sectionPadding);
        padding-top: 11.9rem;
        background-color: #f9f9f9;
    }
    #cs-contact-549 .cs-container {
        width: 100%;
        max-width: 80rem;
        margin: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        /* 48px - 64px */
        gap: clamp(3rem, 6vw, 4rem);
    }
    #cs-contact-549 .cs-content {
        /* set text aling to left if content needs to be left aligned */
        text-align: center;
        width: 100%;
        display: flex;
        flex-direction: column;
        /* centers content horizontally, set to flex-start to left align */
        align-items: center;
    }
    #cs-contact-549 .cs-topper {
        font-size: var(--topperFontSize);
        line-height: 1.2em;
        text-transform: uppercase;
        text-align: inherit;
        letter-spacing: 0.1em;
        font-weight: 700;
        color: var(--primary);
        margin-bottom: 0.25rem;
        display: block;
    }
    #cs-contact-549 .cs-title {
        font-size: var(--headerFontSize);
        font-weight: 900;
        line-height: 1.2em;
        text-align: inherit;
        /* max width of 24 characters including spaces */
        max-width: 24ch;
        margin: 0 0 1rem 0;
        color: var(--headerColor);
        position: relative;
    }
    #cs-contact-549 .cs-text {
        font-size: var(--bodyFontSize);
        line-height: 1.5em;
        text-align: inherit;
        width: 100%;
        max-width: 40.625rem;
        margin: 0;
        color: var(--bodyTextColor);
    }
    #cs-contact-549 .cs-background {
        width: 100%;
        height: 19.5rem;
        display: block;
        position: relative;
    }
    #cs-contact-549 .cs-background:before {
        /* yellow dot */
        content: "";
        width: 1.125rem;
        height: 1.125rem;
        background: var(--primary);
        border-radius: 50%;
        opacity: 1;
        position: absolute;
        display: block;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 10;
    }
    #cs-contact-549 .cs-background:after {
        /* yellow animated ring */
        content: "";
        width: 1.125rem;
        height: 1.125rem;
        background: transparent;
        border-radius: 50%;
        border: 1px solid var(--primary);
        opacity: 1;
        position: absolute;
        display: block;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(0);
        z-index: 10;
        transition:
            transform 0.4s,
            opacity 0.4s;
        animation-name: scaleFade;
        animation-duration: 2s;
        animation-timing-function: linear;
        animation-fill-mode: forwards;
        animation-iteration-count: infinite;
    }
    #cs-contact-549 .cs-background img {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        object-fit: cover;
    }
    #cs-contact-549 .cs-form {
        width: 100%;
        max-width: 66.5rem;
        display: flex;
        flex-direction: column;
        gap: 1.25rem;
    }
    #cs-contact-549 .cs-label {
        /* 16px - 20px */
        font-size: clamp(1rem, 2vw, 1.25rem);
        line-height: 1.5em;
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 0.75rem;
        position: relative;
    }
    #cs-contact-549 .cs-input,
    #cs-contact-549 .cs-textarea,
    #cs-contact-549 select,
    #cs-contact-549 .cs-select {
        /* added options for the select tag in case you add it, that way it will also have the same styles, add the cs-select class for better specificity when targeting it */
        /* 16px - 20px */
        font-size: clamp(1rem, 2vw, 1.25rem);
        font-family: inherit;
        margin: 0;
        /* 24px - 40px */
        padding: 0 clamp(1.5rem, 5vw, 2.5rem) 0;
        width: 100%;
        /* 70px - 90px */
        height: clamp(4.375rem, 7vw, 5.625rem);
        background-color: #f1f1f4;
        /* prevents border and padding from affecting height and width */
        box-sizing: border-box;
        border: 3px solid transparent;
        display: block;
        position: relative;
        transition: border-color 0.3s;
    }
    #cs-contact-549 .cs-input:hover,
    #cs-contact-549 .cs-textarea:hover,
    #cs-contact-549 select:hover,
    #cs-contact-549 .cs-select:hover,
    #cs-contact-549 .cs-input:focus,
    #cs-contact-549 .cs-textarea:focus,
    #cs-contact-549 select:focus,
    #cs-contact-549 .cs-select:focus {
        /* focus has a black outline, we override it here */
        outline: none;
        border-color: var(--primaryLight);
    }
    #cs-contact-549 .cs-textarea {
        width: 100%;
        margin: 0;
        padding-top: 1rem;
        /* changes at tablet */
        min-height: 12.5rem;
    }
    #cs-contact-549 .cs-icon {
        width: 1.875rem;
        height: auto;
        position: absolute;
        /* 24px - 40px, matches the padding left and right of input */
        right: clamp(1.5rem, 5vw, 2.5rem);
        /* these two center the icon inside the label */
        bottom: 50%;
        transform: translateY(115%);
    }
    #cs-contact-549 .cs-submit {
    /* 20px - 25px */
    font-size: clamp(1.25rem, 2vw, 1.5625rem);
    /* Adjusted line height for better button shape */
    line-height: normal;
    /* Improved padding for balanced spacing inside the button */
    padding: 1rem 2rem;
    text-decoration: none;
    font-weight: 700;
    text-align: center;
    margin: clamp(1.75rem, 6vw, 2.75rem) auto 0;
    color: #1a1a1a;
    border: none;
    /* Button color */
    background-color: #EC9C52; /* Example: vibrant orange */
    border-radius: 0.25rem;
    display: inline-block;
    position: relative;
    z-index: 1;
    box-sizing: border-box;
    transition: color 0.3s, background-color 0.3s;
}

#cs-contact-549 .cs-submit:before {
    content: "";
    position: absolute;
    height: 100%;
    width: 0%;
    background: #000;
    opacity: 1;
    top: 0;
    left: 0;
    z-index: -1;
    border-radius: 0.25rem;
    transition: width 0.3s;
}

#cs-contact-549 .cs-submit:hover {
    color: #fff;
    background-color: #e67300; /* Slightly darker hover color for contrast */
    cursor: pointer;
}

#cs-contact-549 .cs-submit:hover:before {
    width: 100%;
}

}
/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #cs-contact-549 .cs-background {
        /* 310px - 568px */
        height: clamp(19.375rem, 43vw, 35.5rem);
    }
    #cs-contact-549 .cs-form {
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-between;
    }
    #cs-contact-549 .cs-label {
        width: 48%;
    }
    #cs-contact-549 .cs-textarea-label {
        width: 100%;
    }
    #cs-contact-549 .cs-textarea {
        /* 280px - 358px */
        min-height: clamp(17.5rem, 28vw, 22.375rem);
    }
}

                                
</style>

<script>
    document.querySelector('#cs-form-549').addEventListener('submit', function(event) {
       event.preventDefault(); // Prevent immediate form submission for now
 
       var formData = new FormData(this);
       // Send data to Zapier webhook
       fetch('https://hooks.zapier.com/hooks/catch/21299686/2kovrrk/', {
          method: 'POST',
          body: formData
       })
       .then(response => response.json())
       .then(data => {
          // Submit the form to Netlify after sending data to Zapier
          this.submit();
       })
       .catch(error => {
          console.error('Error sending data to Zapier:', error);
          // Continue form submission if Zapier fails
          this.submit();
       });
    });
 </script>


</BaseLayout>