---
import DashLayout from "src/layouts/DashLayout.astro";
import CTA from "@components/CTA.astro";
import FAQ from "@components/FAQ.astro";

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Landing (for rendering)
import {getOptimizedImage} from "@js/utils"
import landingImage from "@assets/images/landing.jpg" // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
const optimizedImage = await getOptimizedImage(landingImage)




---

<DashLayout
title="Dashboard"
  description="We Specialise In Service Based Websites"
  preloadedImage = {optimizedImage}>


<!-- ============================================ -->
<!--                  Services                    -->
<!-- ============================================ -->

<section id="services-448">
    <div class="cs-container">
        <div class="cs-content">
            <span class="cs-topper">Hi there</span>
            <h2 class="cs-title">Welcome To Your Dashboard</h2>
            <p class="cs-text">
                Here you can fill out your business information and upload any company photos. Its that easy.
            </p>
        </div>
        <ul class="cs-card-group">
            <li class="cs-item">
                <div class="cs-flex">
                    <picture class="cs-wrapper">
                        <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/personal-data-1-45.svg" alt="icon" width="70" height="70">
                    </picture>
                    <h3 class="cs-h3">Business Info</h3>
                    <p class="cs-item-text">Simply fill out a quick form about you & your company. </p>
                    <a href="/business-info" class="cs-link">Enter Here</a>
                </div>
                <picture class="cs-picture">
                    <source media="(max-width: 600px)" srcset="/assets/svgs/personal-data-37.svg">
                    <source media="(min-width: 601px)" srcset="/assets/svgs/personal-data-37.svg">
                    <img aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/personal-data-37.svg" alt="leaf" width="345" height="428">
                </picture>
            </li>
            <li class="cs-item">
                <div class="cs-flex">
                    <picture class="cs-wrapper">
                        <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/camera-1-48.svg" alt="icon" width="70" height="70">
                    </picture>
                    <h3 class="cs-h3">Upload Photos</h3>
                    <p class="cs-item-text">Photos of you, your work, your team and logo, the more the better.</p>
                    <a href="" class="cs-link">Enter Here</a>
                </div>
                <picture class="cs-picture">
                    <source media="(max-width: 600px)" srcset="/assets/svgs/camera-13.svg">
                    <source media="(min-width: 601px)" srcset="/assets/svgs/camera-13.svg">
                    <img aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/camera-13.svg" alt="leaf" width="345" height="428">
                </picture>
            </li>
            <!-- <li class="cs-item">
                <div class="cs-flex">
                    <picture class="cs-wrapper">
                        <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/credit-card-10.svg" alt="icon" width="70" height="70">
                    </picture>
                    <h3 class="cs-h3">View Payments</h3>
                    <p class="cs-item-text">See your monthly transactions here.<br> <br></p>
                    <a href="" class="cs-link">Enter Here</a>
                </div>
                <picture class="cs-picture">
                    <source media="(max-width: 600px)" srcset="/assets/svgs/credit-card-26.svg">
                    <source media="(min-width: 601px)" srcset="/assets/svgs/credit-card-26.svg">
                    <img aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/credit-card-26.svg" alt="leaves" width="345" height="428">
                </picture>
            </li> -->
        </ul>
    </div>
</section>
                                

<style>
    /*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #services-448 {
        position: relative;
        padding: var(--sectionPadding);
        margin-top: 4rem;
    }

    #services-448::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: #f7f7f7;
        z-index: -1; /* Places the background behind the content */
    }




    #services-448 .cs-container {
        width: 100%;
        /* changes at 1280px at tablet */
        max-width: 34.375rem;
        margin: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        /* 48px - 64px */
        gap: clamp(3rem, 6vw, 4rem);
        
    }
    #services-448 .cs-content {
        /* set text align to left if content needs to be left aligned */
        text-align: center;
        width: 100%;
        display: flex;
        flex-direction: column;
        /* centers content horizontally, set to flex-start to left align */
        align-items: center;
    }

    #services-448 .cs-card-group {
        width: 100%;
        padding: 0;
        margin: 0;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        /* 16px - 20px */
        column-gap: clamp(1rem, 1.5vw, 1.25rem);
        /* 24px - 60px */
        row-gap: clamp(1.5rem, 5vw, 3.75rem);
    }
    #services-448 .cs-item {
        list-style: none;
        width: 100%;
        max-width: 22.5rem;
        /* changes at desktop */
        padding-top: 9rem;
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
    #services-448 .cs-item:hover .cs-picture img {
        transform: scale(1.2);
        opacity: 0.4;
    }
    #services-448 .cs-item:hover .cs-flex:before {
        opacity: 1;
    }
    #services-448 .cs-picture {
        width: 100%;
        /* changes at desktop */
        height: 15.625rem;
        border-radius: 0.5rem;
        background-color: var(--primary);
        /* clips the corners of the image */
        overflow: hidden;
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
    }
    #services-448 .cs-picture img {
        position: absolute;
        top: 0;
        left: 0;
        height: 70%;
        width: 70%;
        /* makes it behave like a background image */
        object-fit: cover;
        /* positions top of image to the top of the container */
        object-position: top;
        transition:
            transform 0.9s,
            opacity 0.5s;
    }
    #services-448 .cs-flex {
        text-align: center;
        width: 88%;
        padding: 0 1.5rem 1.5rem 1.5rem;
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        border: 1px solid #dad9e3;
        border-radius: 0.75rem;
        background-color: #fff;
        box-shadow: 0px 24px 54px rgba(87, 107, 147, 0.12);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        position: relative;
    }
    #services-448 .cs-flex:before {
        /* hover border box */
        content: "";
        background: transparent;
        /* prevents the mouse from interacting with it */
        pointer-events: none;
        border: 4px solid var(--primary);
        border-radius: 0.75rem;
        /* prevents border from affecting height and width */
        box-sizing: border-box;
        opacity: 0;
        position: absolute;
        display: block;
        top: -1px;
        left: -1px;
        right: -1px;
        bottom: -1px;
        transition: opacity 0.5s;
    }
    #services-448 .cs-wrapper {
        /* 80px - 120px */
        width: clamp(5rem, 9.2vw, 7.5rem);
        height: clamp(5rem, 9.2vw, 7.5rem);
        /* 20px - 24px */
        margin: 0 0 clamp(1.25rem, 1.5vw, 1.5rem);
        /* we use the same clamp value for height & width, but multiple by -.5 so it will be a negative value, and be half of the height.  Negative margins pull things toward the element so they overlap them, in this case we want the .cs-wrapper to overlap .cs-flex by half its height, so we use the same clamp for height and half it for the margin top value */
        margin-top: calc(clamp(5rem, 9.2vw, 7.5rem) * -0.5);
        border-radius: 50%;
        border: 4px solid var(--primary);
        background-color: #fff;
        /* prevents border from affecting height and width */
        box-sizing: border-box;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        z-index: 10;
    }
    #services-448 .cs-icon {
        /* 48px - 64px */
        width: clamp(3rem, 4.3vw, 4rem);
        height: auto;
        display: block;
    }
    #services-448 .cs-h3 {
        /* 20px - 25px */
        font-size: clamp(1.25rem, 1.9vw, 1.5625rem);
        line-height: 1.2em;
        font-weight: 700;
        margin: 0 0 0.5rem 0;
        color: var(--headerColor);
    }
    #services-448 .cs-item-text {
        /* 14px - 16px */
        font-size: clamp(0.875rem, 1.5vw, 1rem);
        line-height: 1.5em;
        font-weight: 400;
        /* 20px - 24px */
        margin: 0 0 clamp(1.25rem, 1.5vw, 1.5rem);
        color: var(--bodyTextColor);
    }
    #services-448 .cs-link {
        /* 16px - 20px */
        font-size: clamp(1rem, 1.5vw, 1.25rem);
        line-height: 1.5em;
        font-weight: 700;
        text-transform: uppercase;
        text-decoration: none;
        margin: 0;
        color: var(--primary);
        display: inline-block;
        position: relative;
    }
    #services-448 .cs-link:hover:before {
        width: 100%;
    }
    #services-448 .cs-link:before {
        /* animated underline */
        content: "";
        width: 0%;
        height: 3px;
        background: currentColor;
        opacity: 1;
        position: absolute;
        display: block;
        bottom: -0.125rem;
        left: 0;
        transition: width 0.3s;
    }
}
/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #services-448 .cs-container {
        max-width: 80rem;
    }
    #services-448 .cs-card-group {
        flex-direction: row;
    }
    #services-448 .cs-item {
        width: 47%;
    }
}
/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #services-448 .cs-card-group {
        flex-wrap: nowrap;
    }
    #services-448 .cs-item {
        width: 100%;
        /* 144px - 274px */
        padding-top: clamp(9rem, 17.5vw, 17.125rem);
    }
    #services-448 .cs-picture {
        /* 224px - 428px */
        height: clamp(14rem, 28vw, 26.75rem);
    }
}

                                
</style>

<script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
    import { getAuth, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-auth.js";

// Your web app's Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyBBReqCi904u_Lh0jZdAzB-sEsxfIP4FnM",
  authDomain: "truesigndesignauth.firebaseapp.com",
  databaseURL: "https://truesigndesignauth-default-rtdb.firebaseio.com",
  projectId: "truesigndesignauth",
  storageBucket: "truesigndesignauth.firebasestorage.app",
  messagingSenderId: "977508579565",
  appId: "1:977508579565:web:1f83dfce992f0e4b56f4e4"
};


    const app = initializeApp(firebaseConfig);
    const auth = getAuth(app);

    // Check if the user is authenticated
    onAuthStateChanged(auth, (user) => {
        if (user) {
            console.log("User is logged in", user);
            // Optionally redirect to a protected page
        } else {
            console.log("User is not logged in");
            window.location.href = "/login.html"; // Redirect to login page if not authenticated
        }
    });
</script>

</DashLayout>







